/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["resources_js_includes_notifications_js"],{

/***/ "./resources/js/includes/notifications.js":
/*!************************************************!*\
  !*** ./resources/js/includes/notifications.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar notifications = [];\nvar NOTIFICATION_TYPES = {\n  follow: \"App\\\\Notifications\\\\UserFollowed\",\n  newPost: 'App\\\\Notifications\\\\NewPost',\n  like: 'App\\\\Notifications\\\\BlogPostLiked'\n};\n\nfunction addNotifications(newNotifications, target) {\n  notifications = _.concat(notifications, newNotifications); // show only last 5 notifications\n\n  notifications.slice(0, 5);\n  showNotifications(notifications, target);\n}\n\nfunction showNotifications(notifications, target) {\n  if (notifications.length) {\n    var htmlElements = notifications.map(function (notification) {\n      return makeNotification(notification);\n    });\n    $(target + 'Menu').html(htmlElements.join(''));\n    $(target).addClass('has-notifications');\n    $('#quantity-sum').text(notifications.length);\n  } else {\n    $(target + 'Menu').html('<li class=\"dropdown-header\">No notifications</li>');\n    $(target).removeClass('has-notifications');\n  }\n}\n\nfunction makeNotification(notification) {\n  var to = routeNotification(notification);\n  var notificationText = makeNotificationText(notification);\n  return '<li><a class=\"m-2\" href=\"' + to + '\">' + notificationText + '</a></li>';\n} // get the notification route based on it's type\n\n\nfunction routeNotification(notification) {\n  var to = \"?read=\".concat(notification.id);\n\n  if (notification.type === NOTIFICATION_TYPES.follow) {\n    to = 'blog/profile/' + notification.data.follower_id + to;\n  } else if (notification.type === NOTIFICATION_TYPES.newPost) {\n    var postId = notification.data.post_id;\n    to = \"blog/posts/\".concat(postId) + to;\n  } else if (notification.type === NOTIFICATION_TYPES.like) {\n    var _postId = notification.data.post_id;\n    to = \"blog/posts/\".concat(_postId) + to;\n  }\n\n  return '/' + to;\n} // get the notification text based on it's type\n\n\nfunction makeNotificationText(notification) {\n  var text = '';\n\n  if (notification.type === NOTIFICATION_TYPES.follow) {\n    var name = notification.data.follower_name;\n    text += \"<strong>\".concat(name, \"</strong> followed you\");\n  } else if (notification.type === NOTIFICATION_TYPES.newPost) {\n    var _name = notification.data.following_name;\n    text += \"<strong>\".concat(_name, \"</strong> published a new post\");\n  } else if (notification.type === NOTIFICATION_TYPES.like) {\n    var _name2 = notification.data.liked_user_name;\n    text += \"<strong>\".concat(_name2, \"</strong> liked your post\");\n  }\n\n  return text;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (addNotifications);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvaW5jbHVkZXMvbm90aWZpY2F0aW9ucy5qcz8xMTJmIl0sIm5hbWVzIjpbIm5vdGlmaWNhdGlvbnMiLCJOT1RJRklDQVRJT05fVFlQRVMiLCJmb2xsb3ciLCJuZXdQb3N0IiwibGlrZSIsImFkZE5vdGlmaWNhdGlvbnMiLCJuZXdOb3RpZmljYXRpb25zIiwidGFyZ2V0IiwiXyIsImNvbmNhdCIsInNsaWNlIiwic2hvd05vdGlmaWNhdGlvbnMiLCJsZW5ndGgiLCJodG1sRWxlbWVudHMiLCJtYXAiLCJub3RpZmljYXRpb24iLCJtYWtlTm90aWZpY2F0aW9uIiwiJCIsImh0bWwiLCJqb2luIiwiYWRkQ2xhc3MiLCJ0ZXh0IiwicmVtb3ZlQ2xhc3MiLCJ0byIsInJvdXRlTm90aWZpY2F0aW9uIiwibm90aWZpY2F0aW9uVGV4dCIsIm1ha2VOb3RpZmljYXRpb25UZXh0IiwiaWQiLCJ0eXBlIiwiZGF0YSIsImZvbGxvd2VyX2lkIiwicG9zdElkIiwicG9zdF9pZCIsIm5hbWUiLCJmb2xsb3dlcl9uYW1lIiwiZm9sbG93aW5nX25hbWUiLCJsaWtlZF91c2VyX25hbWUiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxJQUFJQSxhQUFhLEdBQUcsRUFBcEI7QUFFQSxJQUFNQyxrQkFBa0IsR0FBRztBQUN2QkMsUUFBTSxFQUFFLGtDQURlO0FBRXZCQyxTQUFPLEVBQUUsNkJBRmM7QUFHdkJDLE1BQUksRUFBRTtBQUhpQixDQUEzQjs7QUFPQSxTQUFTQyxnQkFBVCxDQUEwQkMsZ0JBQTFCLEVBQTRDQyxNQUE1QyxFQUFvRDtBQUNoRFAsZUFBYSxHQUFHUSxDQUFDLENBQUNDLE1BQUYsQ0FBU1QsYUFBVCxFQUF3Qk0sZ0JBQXhCLENBQWhCLENBRGdELENBRWhEOztBQUNBTixlQUFhLENBQUNVLEtBQWQsQ0FBb0IsQ0FBcEIsRUFBdUIsQ0FBdkI7QUFDQUMsbUJBQWlCLENBQUNYLGFBQUQsRUFBZ0JPLE1BQWhCLENBQWpCO0FBQ0g7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Q2MsSUFBYixDQUFrQk8sZUFBL0I7QUFDQWYsUUFBSSxzQkFBZVksTUFBZiw4QkFBSjtBQUNIOztBQUNELFNBQU9aLElBQVA7QUFDSDs7QUFFRCxpRUFBZWhCLGdCQUFmIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2pzL2luY2x1ZGVzL25vdGlmaWNhdGlvbnMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgbm90aWZpY2F0aW9ucyA9IFtdO1xuXG5jb25zdCBOT1RJRklDQVRJT05fVFlQRVMgPSB7XG4gICAgZm9sbG93OiAnQXBwXFxcXE5vdGlmaWNhdGlvbnNcXFxcVXNlckZvbGxvd2VkJyxcbiAgICBuZXdQb3N0OiAnQXBwXFxcXE5vdGlmaWNhdGlvbnNcXFxcTmV3UG9zdCcsXG4gICAgbGlrZTogJ0FwcFxcXFxOb3RpZmljYXRpb25zXFxcXEJsb2dQb3N0TGlrZWQnXG59O1xuXG5cbmZ1bmN0aW9uIGFkZE5vdGlmaWNhdGlvbnMobmV3Tm90aWZpY2F0aW9ucywgdGFyZ2V0KSB7XG4gICAgbm90aWZpY2F0aW9ucyA9IF8uY29uY2F0KG5vdGlmaWNhdGlvbnMsIG5ld05vdGlmaWNhdGlvbnMpO1xuICAgIC8vIHNob3cgb25seSBsYXN0IDUgbm90aWZpY2F0aW9uc1xuICAgIG5vdGlmaWNhdGlvbnMuc2xpY2UoMCwgNSk7XG4gICAgc2hvd05vdGlmaWNhdGlvbnMobm90aWZpY2F0aW9ucywgdGFyZ2V0KTtcbn1cblxuZnVuY3Rpb24gc2hvd05vdGlmaWNhdGlvbnMobm90aWZpY2F0aW9ucywgdGFyZ2V0KSB7XG4gICAgaWYgKG5vdGlmaWNhdGlvbnMubGVuZ3RoKSB7XG4gICAgICAgIGxldCBodG1sRWxlbWVudHMgPSBub3RpZmljYXRpb25zLm1hcChmdW5jdGlvbiAobm90aWZpY2F0aW9uKSB7XG4gICAgICAgICAgICByZXR1cm4gbWFrZU5vdGlmaWNhdGlvbihub3RpZmljYXRpb24pO1xuICAgICAgICB9KTtcbiAgICAgICAgJCh0YXJnZXQgKyAnTWVudScpLmh0bWwoaHRtbEVsZW1lbnRzLmpvaW4oJycpKTtcbiAgICAgICAgJCh0YXJnZXQpLmFkZENsYXNzKCdoYXMtbm90aWZpY2F0aW9ucycpXG4gICAgICAgICQoJyNxdWFudGl0eS1zdW0nKS50ZXh0KG5vdGlmaWNhdGlvbnMubGVuZ3RoKVxuICAgIH0gZWxzZSB7XG4gICAgICAgICQodGFyZ2V0ICsgJ01lbnUnKS5odG1sKCc8bGkgY2xhc3M9XCJkcm9wZG93bi1oZWFkZXJcIj5ObyBub3RpZmljYXRpb25zPC9saT4nKTtcbiAgICAgICAgJCh0YXJnZXQpLnJlbW92ZUNsYXNzKCdoYXMtbm90aWZpY2F0aW9ucycpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gbWFrZU5vdGlmaWNhdGlvbihub3RpZmljYXRpb24pIHtcbiAgICBsZXQgdG8gPSByb3V0ZU5vdGlmaWNhdGlvbihub3RpZmljYXRpb24pO1xuICAgIGxldCBub3RpZmljYXRpb25UZXh0ID0gbWFrZU5vdGlmaWNhdGlvblRleHQobm90aWZpY2F0aW9uKTtcbiAgICByZXR1cm4gJzxsaT48YSBjbGFzcz1cIm0tMlwiIGhyZWY9XCInICsgdG8gKyAnXCI+JyArIG5vdGlmaWNhdGlvblRleHQgKyAnPC9hPjwvbGk+Jztcbn1cblxuLy8gZ2V0IHRoZSBub3RpZmljYXRpb24gcm91dGUgYmFzZWQgb24gaXQncyB0eXBlXG5mdW5jdGlvbiByb3V0ZU5vdGlmaWNhdGlvbihub3RpZmljYXRpb24pIHtcbiAgICBsZXQgdG8gPSBgP3JlYWQ9JHtub3RpZmljYXRpb24uaWR9YDtcbiAgICBpZiAobm90aWZpY2F0aW9uLnR5cGUgPT09IE5PVElGSUNBVElPTl9UWVBFUy5mb2xsb3cpIHtcbiAgICAgICAgdG8gPSAnYmxvZy9wcm9maWxlLycgKyBub3RpZmljYXRpb24uZGF0YS5mb2xsb3dlcl9pZCArIHRvO1xuICAgIH0gZWxzZSBpZiAobm90aWZpY2F0aW9uLnR5cGUgPT09IE5PVElGSUNBVElPTl9UWVBFUy5uZXdQb3N0KSB7XG4gICAgICAgIGNvbnN0IHBvc3RJZCA9IG5vdGlmaWNhdGlvbi5kYXRhLnBvc3RfaWQ7XG4gICAgICAgIHRvID0gYGJsb2cvcG9zdHMvJHtwb3N0SWR9YCArIHRvO1xuICAgIH0gZWxzZSBpZiAobm90aWZpY2F0aW9uLnR5cGUgPT09IE5PVElGSUNBVElPTl9UWVBFUy5saWtlKSB7XG4gICAgICAgIGNvbnN0IHBvc3RJZCA9IG5vdGlmaWNhdGlvbi5kYXRhLnBvc3RfaWQ7XG4gICAgICAgIHRvID0gYGJsb2cvcG9zdHMvJHtwb3N0SWR9YCArIHRvO1xuICAgIH1cbiAgICByZXR1cm4gJy8nICsgdG87XG59XG5cbi8vIGdldCB0aGUgbm90aWZpY2F0aW9uIHRleHQgYmFzZWQgb24gaXQncyB0eXBlXG5mdW5jdGlvbiBtYWtlTm90aWZpY2F0aW9uVGV4dChub3RpZmljYXRpb24pIHtcbiAgICBsZXQgdGV4dCA9ICcnO1xuICAgIGlmIChub3RpZmljYXRpb24udHlwZSA9PT0gTk9USUZJQ0FUSU9OX1RZUEVTLmZvbGxvdykge1xuICAgICAgICBjb25zdCBuYW1lID0gbm90aWZpY2F0aW9uLmRhdGEuZm9sbG93ZXJfbmFtZTtcbiAgICAgICAgdGV4dCArPSBgPHN0cm9uZz4ke25hbWV9PC9zdHJvbmc+IGZvbGxvd2VkIHlvdWA7XG4gICAgfSBlbHNlIGlmIChub3RpZmljYXRpb24udHlwZSA9PT0gTk9USUZJQ0FUSU9OX1RZUEVTLm5ld1Bvc3QpIHtcbiAgICAgICAgY29uc3QgbmFtZSA9IG5vdGlmaWNhdGlvbi5kYXRhLmZvbGxvd2luZ19uYW1lO1xuICAgICAgICB0ZXh0ICs9IGA8c3Ryb25nPiR7bmFtZX08L3N0cm9uZz4gcHVibGlzaGVkIGEgbmV3IHBvc3RgO1xuICAgIH0gZWxzZSBpZiAobm90aWZpY2F0aW9uLnR5cGUgPT09IE5PVElGSUNBVElPTl9UWVBFUy5saWtlKSB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSBub3RpZmljYXRpb24uZGF0YS5saWtlZF91c2VyX25hbWU7XG4gICAgICAgIHRleHQgKz0gYDxzdHJvbmc+JHtuYW1lfTwvc3Ryb25nPiBsaWtlZCB5b3VyIHBvc3RgO1xuICAgIH1cbiAgICByZXR1cm4gdGV4dDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgYWRkTm90aWZpY2F0aW9ucztcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/includes/notifications.js\n");

/***/ })

}]);